/* global fetch */
export class Anix{static id=0;static makePayload=(t,e,n=1)=>({jsonrpc:"2.0",id:n,method:t,params:e});constructor(t,e,n){return Object.assign(this,{namespace:t,endpoint:e,options:{debugRequest:!1,debugResponse:!1,...n}}),new Proxy(this,{get:(t,e)=>async function(){let n=Anix.makePayload(`${t.namespace}_${e}`,[...arguments],++Anix.id);return t.options.debugRequest&&console.log(n),fetch(t.endpoint,{method:"POST",body:JSON.stringify(n),headers:{"Content-type":"application/json;"}}).then(t=>t.json()).then(e=>{if(t.options.debugResponse&&console.dir(e),e.error)throw JSON.stringify(e.error);return e.result})}})}}export const toHex=(t,e)=>"0x"+t.toString(16).padStart(e||t.toString(16).length,"0");